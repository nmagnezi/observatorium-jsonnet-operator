apiVersion: v1
kind: Template
metadata:
  name: observatorium-api
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app.kubernetes.io/name: observatorium-api
    name: observatorium-api
    namespace: ${NAMESPACE}
  spec:
    replicas: ${{OBSERVATORIUM_API_REPLICAS}}
    selector:
      matchLabels:
        app.kubernetes.io/name: observatorium-api
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
    template:
      metadata:
        labels:
          app.kubernetes.io/name: observatorium-api
      spec:
        containers:
        - args:
          - --web.listen=0.0.0.0:8080
          - --metrics.ui.endpoint=http://thanos-query.${NAMESPACE}.svc.cluster.local:9090
          - --metrics.query.endpoint=http://cortex-query-cache.${NAMESPACE}.svc.cluster.local:9090/api/v1/query
          - --metrics.write.endpoint=http://thanos-receive.${NAMESPACE}.svc.cluster.local:19291/api/v1/receive
          - --log.level=warn
          image: ${OBSERVATORIUM_API_IMAGE}:${OBSERVATORIUM_API_IMAGE_TAG}
          livenessProbe:
            failureThreshold: 4
            httpGet:
              path: /-/healthy
              port: 8080
              scheme: HTTP
            periodSeconds: 30
          name: observatorium-api
          ports:
          - containerPort: 8080
            name: http
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /-/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
            limits:
              cpu: ${OBSERVATORIUM_API_CPU_LIMIT}
              memory: ${OBSERVATORIUM_API_MEMORY_LIMIT}
            requests:
              cpu: ${OBSERVATORIUM_API_CPU_REQUEST}
              memory: ${OBSERVATORIUM_API_MEMORY_REQUEST}
        - args:
          - -provider=openshift
          - -https-address=:8081
          - -http-address=
          - -email-domain=*
          - -upstream=http://localhost:8080
          - -openshift-service-account=prometheus-telemeter
          - '-openshift-sar={"resource": "namespaces", "verb": "get", "name": "${NAMESPACE}",
            "namespace": "${NAMESPACE}"}'
          - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get",
            "name": "${NAMESPACE}", "namespace": "${NAMESPACE}"}}'
          - -tls-cert=/etc/tls/private/tls.crt
          - -tls-key=/etc/tls/private/tls.key
          - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
          - -cookie-secret-file=/etc/proxy/secrets/session_secret
          - -openshift-ca=/etc/pki/tls/cert.pem
          - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - -skip-auth-regex=^/metrics
          image: ${PROXY_IMAGE}:${PROXY_IMAGE_TAG}
          name: proxy
          ports:
          - containerPort: 8081
            name: https
          resources:
            limits:
              cpu: ${OBSERVATORIUM_API_PROXY_CPU_LIMITS}
              memory: ${OBSERVATORIUM_API_PROXY_MEMORY_LIMITS}
            requests:
              cpu: ${OBSERVATORIUM_API_PROXY_CPU_REQUEST}
              memory: ${OBSERVATORIUM_API_PROXY_MEMORY_REQUEST}
          volumeMounts:
          - mountPath: /etc/tls/private
            name: secret-api-tls
            readOnly: false
          - mountPath: /etc/proxy/secrets
            name: secret-api-proxy
            readOnly: false
        serviceAccount: prometheus-telemeter
        serviceAccountName: prometheus-telemeter
        volumes:
        - name: secret-api-tls
          secret:
            secretName: observatorium-api-tls
        - name: secret-api-proxy
          secret:
            secretName: observatorium-api-proxy
- apiVersion: v1
  data:
    session_secret: ""
  kind: Secret
  metadata:
    labels:
      app.kubernetes.io/name: observatorium-api
    name: observatorium-api-proxy
    namespace: ${NAMESPACE}
  type: Opaque
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: observatorium-api-tls
    name: observatorium-api
    namespace: ${NAMESPACE}
  spec:
    ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: https
      port: 8081
      targetPort: https
    selector:
      app.kubernetes.io/name: observatorium-api
parameters:
- name: NAMESPACE
  value: telemeter
- name: IMAGE
  value: ""
- name: IMAGE_TAG
  value: ""
- name: OBSERVATORIUM_API_IMAGE
  value: quay.io/observatorium/observatorium
- name: OBSERVATORIUM_API_IMAGE_TAG
  value: master-2020-01-14-d076eab
- name: PROXY_IMAGE
  value: openshift/oauth-proxy
- name: PROXY_IMAGE_TAG
  value: v1.1.0
- name: OBSERVATORIUM_API_REPLICAS
  value: "3"
- name: OBSERVATORIUM_API_CPU_REQUEST
  value: 100m
- name: OBSERVATORIUM_API_CPU_LIMIT
  value: "1"
- name: OBSERVATORIUM_API_MEMORY_REQUEST
  value: 256Mi
- name: OBSERVATORIUM_API_MEMORY_LIMIT
  value: 1Gi
- name: OBSERVATORIUM_API_PROXY_CPU_REQUEST
  value: 100m
- name: OBSERVATORIUM_API_PROXY_MEMORY_REQUEST
  value: 100Mi
- name: OBSERVATORIUM_API_PROXY_CPU_LIMITS
  value: 200m
- name: OBSERVATORIUM_API_PROXY_MEMORY_LIMITS
  value: 200Mi
